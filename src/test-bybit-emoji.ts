import { TelegramService } from './services/TelegramService';
import { MarketAnalysis } from './types';

// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ Bybit
async function testBybitEmoji() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏ –¥–ª—è Bybit...\n');
  
  const telegramService = new TelegramService('test-token', 'test-chat');
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –∞–Ω–∞–ª–∏–∑–æ–º –¥–ª—è Bybit
  const testAnalyses: MarketAnalysis[] = [
    {
      pair: 'BTC/USDT',
      exchange: 'bybit',
      signal: 'BUY',
      currentPrice: 43250.75,
      probability: 0.75,
      confidence: 0.75,
      indicators: {
        rsi: [75],
        macd: {
          macd: [0.002],
          signal: [0.001], 
          histogram: [0.001]
        },
        bollingerBands: {
          upper: [44000],
          middle: [43000],
          lower: [42000]
        }
      },
      forecast: {
        arima_forecast: 43500,
        garch_volatility: 0.02,
        pair: 'BTC/USDT'
      },
      reasoning: {
        technical: ['RSI –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç—å, confluence: 2'],
        fundamental: ['–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ Bitcoin'],
        risk: '–£–ú–ï–†–ï–ù–ù–´–ô',
        timeframe: '4h'
      }
    },
    {
      pair: 'ETH/USDT',
      exchange: 'bybit',
      signal: 'HOLD',
      currentPrice: 2580.45,
      probability: 0.55,
      confidence: 0.55,
      indicators: {
        rsi: [55],
        macd: {
          macd: [0.0],
          signal: [0.0],
          histogram: [0.0]
        },
        bollingerBands: {
          upper: [2600],
          middle: [2550],
          lower: [2500]
        }
      },
      forecast: {
        arima_forecast: 2590,
        garch_volatility: 0.025,
        pair: 'ETH/USDT'
      },
      reasoning: {
        technical: ['–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–º–µ—à–∞–Ω–Ω—ã–µ, confluence: 0'],
        fundamental: ['–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è'],
        risk: '–ù–ò–ó–ö–ò–ô',
        timeframe: '1h'
      }
    }
  ];
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é formatAnalysisReport
  const reportMessage = (telegramService as any).formatAnalysisReport(testAnalyses);
  
  console.log('üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç:');
  console.log('='.repeat(50));
  console.log(reportMessage);
  console.log('='.repeat(50));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏
  const hasOrangeSquare = reportMessage.includes('üüß');
  const hasOrangeCircle = reportMessage.includes('üü†');
  
  console.log('\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:');
  console.log(`üüß –û—Ä–∞–Ω–∂–µ–≤—ã–π –∫–≤–∞–¥—Ä–∞—Ç –Ω–∞–π–¥–µ–Ω: ${hasOrangeSquare ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
  console.log(`üü† –û—Ä–∞–Ω–∂–µ–≤—ã–π –∫—Ä—É–≥ –Ω–∞–π–¥–µ–Ω: ${hasOrangeCircle ? '‚ùå –î–ê (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å!)' : '‚úÖ –ù–ï–¢'}`);
  
  if (hasOrangeSquare && !hasOrangeCircle) {
    console.log('\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –≠–º–æ–¥–∑–∏ Bybit —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ —Å üü† –Ω–∞ üüß!');
  } else {
    console.log('\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–º–µ–Ω–æ–π —ç–º–æ–¥–∑–∏ Bybit');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testBybitEmoji().catch(console.error);
