import { loadConfig } from './utils/config';
import { ExchangeService } from './services/ExchangeService';

async function quickTest() {
  console.log('üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
  
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const config = loadConfig();
    console.log('üìã –í—ã–±—Ä–∞–Ω–Ω—ã–µ –±–∏—Ä–∂–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', config.selectedExchanges);
    
    // –°–æ–∑–¥–∞–µ–º ExchangeService
    const exchangeService = new ExchangeService(config.selectedExchanges);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–∏—Ä–∂–∏
    const availableExchanges = exchangeService.getAvailableExchanges();
    console.log('üè¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–∏—Ä–∂–∏:', availableExchanges);
    
    if (availableExchanges.length === 0) {
      console.error('‚ùå –ù–∏ –æ–¥–Ω–∞ –±–∏—Ä–∂–∞ –Ω–µ –±—ã–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
      return;
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã
    console.log('\nüí∞ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã BTC/USDT...');
    
    for (const exchangeName of availableExchanges) {
      try {
        console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∏—Ä–∂—É: ${exchangeName}`);
        const price = await exchangeService.getCurrentPrice('BTC/USDT', exchangeName);
        console.log(`‚úÖ ${exchangeName}: $${price.toFixed(2)}`);
      } catch (error) {
        console.error(`‚ùå ${exchangeName}: ${(error as Error).message}`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  }
}

quickTest().catch(console.error);
