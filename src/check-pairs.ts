import { ExchangeService } from './services/ExchangeService';

async function checkPairs() {
  const exchangeService = new ExchangeService();
  
  const pairsToCheck = [
    'BTC/USDT', 'ETH/USDT', 'BNB/USDT', 'ADA/USDT', 'SOL/USDT',
    'XRP/USDT', 'DOT/USDT', 'LINK/USDT', 'POL/USDT', 'UNI/USDT',
    'DOGE/USDT', 'PEPE/USDT', 'TRX/USDT', 'ONDO/USDT', 'ANIME/USDT',
    'BMX/USDT', 'SPX/USDT' // BMT –º–æ–∂–µ—Ç –±—ã—Ç—å BMX –Ω–∞ Bybit
  ];

  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä –Ω–∞ Bybit...\n');

  const availablePairs: string[] = [];
  const unavailablePairs: string[] = [];

  for (const pair of pairsToCheck) {
    try {
      const price = await exchangeService.getCurrentPrice(pair);
      console.log(`‚úÖ ${pair}: $${price}`);
      availablePairs.push(pair);
    } catch (error) {
      console.log(`‚ùå ${pair}: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞`);
      unavailablePairs.push(pair);
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 100));
  }

  console.log('\nüìä –ò—Ç–æ–≥:');
  console.log(`‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: ${availablePairs.length} –ø–∞—Ä`);
  console.log(`‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ: ${unavailablePairs.length} –ø–∞—Ä`);
  
  console.log('\n‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä—ã:');
  console.log(availablePairs.join(','));
  
  if (unavailablePairs.length > 0) {
    console.log('\n‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä—ã:');
    console.log(unavailablePairs.join(','));
  }
}

checkPairs().catch(console.error);
