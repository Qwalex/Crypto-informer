import dotenv from 'dotenv';
import { ExchangeService } from './services/ExchangeService';
import { TechnicalAnalysisService } from './services/TechnicalAnalysisService';
import { PythonAnalysisService } from './services/PythonAnalysisService';
import { TelegramService } from './services/TelegramService';
import { MarketAnalysisService } from './services/MarketAnalysisService';
import { loadConfig } from './utils/config';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

async function diagnoseSignals() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –ø–æ—á–µ–º—É –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —Å–∏–≥–Ω–∞–ª—ã...\n');
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
    const config = loadConfig();
    const exchangeService = new ExchangeService();
    const technicalAnalysisService = new TechnicalAnalysisService();
    const pythonAnalysisService = new PythonAnalysisService();
    const telegramService = new TelegramService(config.telegramToken, config.telegramChatId);
    const marketAnalysisService = new MarketAnalysisService(
      exchangeService,
      technicalAnalysisService,
      pythonAnalysisService,
      telegramService
    );

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const pairs = config.analysisPairs.slice(0, 5); // –ü–µ—Ä–≤—ã–µ 5 –ø–∞—Ä –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    console.log(`üìä –î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—ã: ${pairs.join(', ')}\n`);

    for (const pair of pairs) {
      console.log(`üîç –ê–Ω–∞–ª–∏–∑ –ø–∞—Ä—ã: ${pair}`);
      
      try {
        const analysis = await (marketAnalysisService as any).analyzePair(pair);
        
        console.log(`üí∞ –¶–µ–Ω–∞: $${analysis.currentPrice.toFixed(6)}`);
        console.log(`üìä –°–∏–≥–Ω–∞–ª: ${analysis.signal}`);
        console.log(`üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${(analysis.confidence * 100).toFixed(1)}%`);
        console.log(`üìä –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: ${(analysis.probability * 100).toFixed(1)}%`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è BUY
        console.log('\nüü¢ –£—Å–ª–æ–≤–∏—è –¥–ª—è BUY:');
        console.log(`  probability >= 0.75: ${analysis.probability >= 0.75} (—Ç–µ–∫—É—â–∞—è: ${analysis.probability.toFixed(3)})`);
        console.log(`  confidence >= 0.7: ${analysis.confidence >= 0.7} (—Ç–µ–∫—É—â–∞—è: ${analysis.confidence.toFixed(3)})`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è SELL  
        console.log('\nüî¥ –£—Å–ª–æ–≤–∏—è –¥–ª—è SELL:');
        console.log(`  probability <= 0.25: ${analysis.probability <= 0.25} (—Ç–µ–∫—É—â–∞—è: ${analysis.probability.toFixed(3)})`);
        console.log(`  confidence >= 0.7: ${analysis.confidence >= 0.7} (—Ç–µ–∫—É—â–∞—è: ${analysis.confidence.toFixed(3)})`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        console.log('\nüìà –£—Å–ª–æ–≤–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞:');
        console.log(`  signal !== 'HOLD': ${analysis.signal !== 'HOLD'}`);
        console.log(`  confidence > 0.65: ${analysis.confidence > 0.65}`);
        
        if (analysis.signal !== 'HOLD' && analysis.confidence > 0.65) {
          console.log('  ‚úÖ –≠—Ç–∞ –ø–∞—Ä–∞ –î–û–õ–ñ–ù–ê –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∏–≥–Ω–∞–ª!');
        } else {
          console.log('  ‚ùå –≠—Ç–∞ –ø–∞—Ä–∞ –ù–ï –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–∏–≥–Ω–∞–ª');
          if (analysis.signal === 'HOLD') {
            console.log('      –ü—Ä–∏—á–∏–Ω–∞: —Å–∏–≥–Ω–∞–ª HOLD');
          }
          if (analysis.confidence <= 0.65) {
            console.log(`      –ü—Ä–∏—á–∏–Ω–∞: –Ω–∏–∑–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (${(analysis.confidence * 100).toFixed(1)}% < 65%)`);
          }
        }
        
        console.log('\n' + '='.repeat(60));
        
        // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∞–Ω–∞–ª–∏–∑–æ–º –ø–∞—Ä
        await new Promise(resolve => setTimeout(resolve, 1000));
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø–∞—Ä—ã ${pair}:`, error);
      }
    }
    
    console.log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï:');
    console.log('1. –°–Ω–∏–∑–∏—Ç—å –ø–æ—Ä–æ–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ —Å 0.65 –¥–æ 0.6 –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–∏–≥–Ω–∞–ª–æ–≤');
    console.log('2. –°–Ω–∏–∑–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ probability —Å 0.75 –¥–æ 0.65 –¥–ª—è BUY');
    console.log('3. –£–≤–µ–ª–∏—á–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ probability —Å 0.25 –¥–æ 0.35 –¥–ª—è SELL');
    console.log('4. –°–¥–µ–ª–∞—Ç—å —É—Å–ª–æ–≤–∏—è confluence –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–º–∏');
    console.log('\nüí° –°–µ–π—á–∞—Å –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –æ—á–µ–Ω—å –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—É—é —Ç–æ—Ä–≥–æ–≤–ª—é!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  diagnoseSignals().catch(console.error);
}

export { diagnoseSignals };
